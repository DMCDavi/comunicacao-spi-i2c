

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 28 23:35:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0013                     _SSPBUF	set	19
   175  0014                     _SSPCON	set	20
   176  0094                     _SSPSTAT	set	148
   177  0093                     _SSPADD	set	147
   178  0091                     _SSPCON2	set	145
   179  048C                     _ACKEN	set	1164
   180  048D                     _ACKDT	set	1165
   181  048B                     _RCEN	set	1163
   182  048A                     _PEN	set	1162
   183  0488                     _SEN	set	1160
   184  043C                     _TRISC4	set	1084
   185  043B                     _TRISC3	set	1083
   186                           
   187                           	psect	cinit
   188  07FC                     start_initialization:	
   189                           ; #config settings
   190                           
   191  07FC                     __initialization:
   192  07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  07FC                     __end_of__initialization:
   196  07FC  0183               	clrf	3
   197  07FD  120A  118A  2EFB   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:
   201  0070                     ?_I2C_Hold:
   202  0070                     ??_I2C_Hold:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_I2C_Begin:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ??_I2C_Begin:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ?_I2C_End:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     ??_I2C_End:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_I2C_Write:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?___lmul:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     I2C_Write@data:	
   227                           ; 4 bytes @ 0x0
   228                           
   229  0070                     ___lmul@multiplier:	
   230                           ; 2 bytes @ 0x0
   231                           
   232                           
   233                           ; 4 bytes @ 0x0
   234  0070                     	ds	2
   235  0072                     ??_I2C_Write:
   236                           
   237                           ; 1 bytes @ 0x2
   238  0072                     	ds	2
   239  0074                     ___lmul@multiplicand:
   240                           
   241                           ; 4 bytes @ 0x4
   242  0074                     	ds	4
   243  0078                     ??___lmul:
   244                           
   245                           ; 1 bytes @ 0x8
   246  0078                     	ds	1
   247  0079                     ___lmul@product:
   248                           
   249                           ; 4 bytes @ 0x9
   250  0079                     	ds	4
   251  007D                     ??___lldiv:
   252                           
   253                           ; 1 bytes @ 0xD
   254  007D                     	ds	1
   255                           
   256                           	psect	cstackBANK0
   257  0020                     __pcstackBANK0:
   258  0020                     ?___lldiv:
   259  0020                     ___lldiv@divisor:	
   260                           ; 4 bytes @ 0x0
   261                           
   262                           
   263                           ; 4 bytes @ 0x0
   264  0020                     	ds	4
   265  0024                     ___lldiv@dividend:
   266                           
   267                           ; 4 bytes @ 0x4
   268  0024                     	ds	4
   269  0028                     ___lldiv@quotient:
   270                           
   271                           ; 4 bytes @ 0x8
   272  0028                     	ds	4
   273  002C                     ___lldiv@counter:
   274                           
   275                           ; 1 bytes @ 0xC
   276  002C                     	ds	1
   277  002D                     ?_I2C_Initialize:
   278  002D                     I2C_Initialize@feq_K:	
   279                           ; 1 bytes @ 0xD
   280                           
   281                           
   282                           ; 4 bytes @ 0xD
   283  002D                     	ds	4
   284  0031                     ??_I2C_Initialize:
   285                           
   286                           ; 1 bytes @ 0x11
   287  0031                     	ds	4
   288  0035                     ??_main:
   289                           
   290                           ; 1 bytes @ 0x15
   291  0035                     	ds	3
   292                           
   293                           	psect	maintext
   294  06FB                     __pmaintext:	
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 20 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       3       0       0       0
   317 ;;      Totals:         0       3       0       0       0
   318 ;;Total ram usage:        3 bytes
   319 ;; Hardware stack levels required when called: 2
   320 ;; This function calls:
   321 ;;		_I2C_Begin
   322 ;;		_I2C_End
   323 ;;		_I2C_Initialize
   324 ;;		_I2C_Write
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330  06FB                     _main:	
   331                           ;psect for function _main
   332                           
   333  06FB                     l783:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   336                           
   337                           
   338                           ;main.c: 21:     I2C_Initialize(100);
   339  06FB  3000               	movlw	0
   340  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   341  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   342  06FE  00B0               	movwf	I2C_Initialize@feq_K+3
   343  06FF  3000               	movlw	0
   344  0700  00AF               	movwf	I2C_Initialize@feq_K+2
   345  0701  3000               	movlw	0
   346  0702  00AE               	movwf	I2C_Initialize@feq_K+1
   347  0703  3064               	movlw	100
   348  0704  00AD               	movwf	I2C_Initialize@feq_K
   349  0705  120A  118A  2741  120A  118A  	fcall	_I2C_Initialize
   350  070A                     l52:	
   351                           ;main.c: 23:     while(1)
   352                           
   353                           
   354                           ;main.c: 24:   {;main.c: 25:    I2C_Begin();
   355  070A  120A  118A  268C  120A  118A  	fcall	_I2C_Begin
   356                           
   357                           ;main.c: 26:    I2C_Write(0xD0);
   358  070F  30D0               	movlw	208
   359  0710  00F0               	movwf	I2C_Write@data
   360  0711  3000               	movlw	0
   361  0712  00F1               	movwf	I2C_Write@data+1
   362  0713  120A  118A  269E  120A  118A  	fcall	_I2C_Write
   363                           
   364                           ;main.c: 27:    I2C_Write(0x88);
   365  0718  3088               	movlw	136
   366  0719  00F0               	movwf	I2C_Write@data
   367  071A  3000               	movlw	0
   368  071B  00F1               	movwf	I2C_Write@data+1
   369  071C  120A  118A  269E  120A  118A  	fcall	_I2C_Write
   370                           
   371                           ;main.c: 28:    I2C_Write(0xFF);
   372  0721  30FF               	movlw	255
   373  0722  00F0               	movwf	I2C_Write@data
   374  0723  3000               	movlw	0
   375  0724  00F1               	movwf	I2C_Write@data+1
   376  0725  120A  118A  269E  120A  118A  	fcall	_I2C_Write
   377                           
   378                           ;main.c: 29:    I2C_End();
   379  072A  120A  118A  2695  120A  118A  	fcall	_I2C_End
   380  072F                     l785:
   381                           
   382                           ;main.c: 30:    _delay((unsigned long)((100)*(20000000/4000.0)));
   383  072F  3003               	movlw	3
   384  0730  1283               	bcf	3,5	;RP0=0, select bank0
   385  0731  1303               	bcf	3,6	;RP1=0, select bank0
   386  0732  00B7               	movwf	??_main+2
   387  0733  308A               	movlw	138
   388  0734  00B6               	movwf	??_main+1
   389  0735  3055               	movlw	85
   390  0736  00B5               	movwf	??_main
   391  0737                     u317:
   392  0737  0BB5               	decfsz	??_main,f
   393  0738  2F37               	goto	u317
   394  0739  0BB6               	decfsz	??_main+1,f
   395  073A  2F37               	goto	u317
   396  073B  0BB7               	decfsz	??_main+2,f
   397  073C  2F37               	goto	u317
   398  073D  2F0A               	goto	l52
   399  073E  120A  118A  2800   	ljmp	start
   400  0741                     __end_of_main:
   401                           
   402                           	psect	text1
   403  069E                     __ptext1:	
   404 ;; *************** function _I2C_Write *****************
   405 ;; Defined at:
   406 ;;		line 37 in file "./i2c.h"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  data            2    0[COMMON] unsigned int 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         2       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         2       0       0       0       0
   424 ;;Total ram usage:        2 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; Hardware stack levels required when called: 1
   427 ;; This function calls:
   428 ;;		_I2C_Hold
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434  069E                     _I2C_Write:	
   435                           ;psect for function _I2C_Write
   436                           
   437  069E                     l779:	
   438                           ;incstack = 0
   439                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;./i2c.h: 37: void I2C_Write(unsigned data);./i2c.h: 38: {;./i2c.h: 39:   I2C_Hold();
   443  069E  120A  118A  26A8  120A  118A  	fcall	_I2C_Hold
   444  06A3                     l781:
   445                           
   446                           ;./i2c.h: 40:   SSPBUF = data;
   447  06A3  0870               	movf	I2C_Write@data,w
   448  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   449  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   450  06A6  0093               	movwf	19	;volatile
   451  06A7                     l44:
   452  06A7  0008               	return
   453  06A8                     __end_of_I2C_Write:
   454                           
   455                           	psect	text2
   456  0741                     __ptext2:	
   457 ;; *************** function _I2C_Initialize *****************
   458 ;; Defined at:
   459 ;;		line 10 in file "./i2c.h"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  feq_K           4   13[BANK0 ] const unsigned long 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       4       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       4       0       0       0
   476 ;;      Totals:         0       8       0       0       0
   477 ;;Total ram usage:        8 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; Hardware stack levels required when called: 1
   480 ;; This function calls:
   481 ;;		___lldiv
   482 ;;		___lmul
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488  0741                     _I2C_Initialize:	
   489                           ;psect for function _I2C_Initialize
   490                           
   491  0741                     l769:	
   492                           ;incstack = 0
   493                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
   494                           
   495                           
   496                           ;./i2c.h: 10: void I2C_Initialize(const unsigned long feq_K);./i2c.h: 11: {;./i2c.h: 12:
      +                             TRISC3 = 1;
   497  0741  1683               	bsf	3,5	;RP0=1, select bank1
   498  0742  1303               	bcf	3,6	;RP1=0, select bank1
   499  0743  1587               	bsf	7,3	;volatile
   500                           
   501                           ;./i2c.h: 13:   TRISC4 = 1;
   502  0744  1607               	bsf	7,4	;volatile
   503  0745                     l771:
   504                           
   505                           ;./i2c.h: 14:   SSPCON = 0b00101000;
   506  0745  3028               	movlw	40
   507  0746  1283               	bcf	3,5	;RP0=0, select bank0
   508  0747  1303               	bcf	3,6	;RP1=0, select bank0
   509  0748  0094               	movwf	20	;volatile
   510  0749                     l773:
   511                           
   512                           ;./i2c.h: 15:   SSPCON2 = 0b00000000;
   513  0749  1683               	bsf	3,5	;RP0=1, select bank1
   514  074A  1303               	bcf	3,6	;RP1=0, select bank1
   515  074B  0191               	clrf	17	;volatile
   516  074C                     l775:
   517                           
   518                           ;./i2c.h: 16:   SSPADD = (20000000/(4*feq_K*100))-1;
   519  074C  1283               	bcf	3,5	;RP0=0, select bank0
   520  074D  1303               	bcf	3,6	;RP1=0, select bank0
   521  074E  082D               	movf	I2C_Initialize@feq_K,w
   522  074F  00B1               	movwf	??_I2C_Initialize
   523  0750  082E               	movf	I2C_Initialize@feq_K+1,w
   524  0751  00B2               	movwf	??_I2C_Initialize+1
   525  0752  082F               	movf	I2C_Initialize@feq_K+2,w
   526  0753  00B3               	movwf	??_I2C_Initialize+2
   527  0754  0830               	movf	I2C_Initialize@feq_K+3,w
   528  0755  00B4               	movwf	??_I2C_Initialize+3
   529  0756  3002               	movlw	2
   530  0757                     u305:
   531  0757  1003               	clrc
   532  0758  0DB1               	rlf	??_I2C_Initialize,f
   533  0759  0DB2               	rlf	??_I2C_Initialize+1,f
   534  075A  0DB3               	rlf	??_I2C_Initialize+2,f
   535  075B  0DB4               	rlf	??_I2C_Initialize+3,f
   536  075C                     u300:
   537  075C  3EFF               	addlw	-1
   538  075D  1D03               	skipz
   539  075E  2F57               	goto	u305
   540  075F  0834               	movf	??_I2C_Initialize+3,w
   541  0760  00F3               	movwf	___lmul@multiplier+3
   542  0761  0833               	movf	??_I2C_Initialize+2,w
   543  0762  00F2               	movwf	___lmul@multiplier+2
   544  0763  0832               	movf	??_I2C_Initialize+1,w
   545  0764  00F1               	movwf	___lmul@multiplier+1
   546  0765  0831               	movf	??_I2C_Initialize,w
   547  0766  00F0               	movwf	___lmul@multiplier
   548  0767  3000               	movlw	0
   549  0768  00F7               	movwf	___lmul@multiplicand+3
   550  0769  3000               	movlw	0
   551  076A  00F6               	movwf	___lmul@multiplicand+2
   552  076B  3000               	movlw	0
   553  076C  00F5               	movwf	___lmul@multiplicand+1
   554  076D  3064               	movlw	100
   555  076E  00F4               	movwf	___lmul@multiplicand
   556  076F  120A  118A  26B5  120A  118A  	fcall	___lmul
   557  0774  0873               	movf	?___lmul+3,w
   558  0775  1283               	bcf	3,5	;RP0=0, select bank0
   559  0776  1303               	bcf	3,6	;RP1=0, select bank0
   560  0777  00A3               	movwf	___lldiv@divisor+3
   561  0778  0872               	movf	?___lmul+2,w
   562  0779  00A2               	movwf	___lldiv@divisor+2
   563  077A  0871               	movf	?___lmul+1,w
   564  077B  00A1               	movwf	___lldiv@divisor+1
   565  077C  0870               	movf	?___lmul,w
   566  077D  00A0               	movwf	___lldiv@divisor
   567  077E  3001               	movlw	1
   568  077F  00A7               	movwf	___lldiv@dividend+3
   569  0780  3031               	movlw	49
   570  0781  00A6               	movwf	___lldiv@dividend+2
   571  0782  302D               	movlw	45
   572  0783  00A5               	movwf	___lldiv@dividend+1
   573  0784  3000               	movlw	0
   574  0785  00A4               	movwf	___lldiv@dividend
   575  0786  120A  118A  2794  120A  118A  	fcall	___lldiv
   576  078B  1283               	bcf	3,5	;RP0=0, select bank0
   577  078C  1303               	bcf	3,6	;RP1=0, select bank0
   578  078D  0820               	movf	?___lldiv,w
   579  078E  3EFF               	addlw	255
   580  078F  1683               	bsf	3,5	;RP0=1, select bank1
   581  0790  1303               	bcf	3,6	;RP1=0, select bank1
   582  0791  0093               	movwf	19	;volatile
   583  0792                     l777:
   584                           
   585                           ;./i2c.h: 17:   SSPSTAT = 0b00000000;
   586  0792  0194               	clrf	20	;volatile
   587  0793                     l29:
   588  0793  0008               	return
   589  0794                     __end_of_I2C_Initialize:
   590                           
   591                           	psect	text3
   592  06B5                     __ptext3:	
   593 ;; *************** function ___lmul *****************
   594 ;; Defined at:
   595 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  multiplier      4    0[COMMON] unsigned long 
   598 ;;  multiplicand    4    4[COMMON] unsigned long 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  product         4    9[COMMON] unsigned long 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  4    0[COMMON] unsigned long 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         8       0       0       0       0
   611 ;;      Locals:         4       0       0       0       0
   612 ;;      Temps:          1       0       0       0       0
   613 ;;      Totals:        13       0       0       0       0
   614 ;;Total ram usage:       13 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_I2C_Initialize
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623  06B5                     ___lmul:	
   624                           ;psect for function ___lmul
   625                           
   626  06B5                     l731:	
   627                           ;incstack = 0
   628                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   629                           
   630  06B5  3000               	movlw	0
   631  06B6  00FC               	movwf	___lmul@product+3
   632  06B7  3000               	movlw	0
   633  06B8  00FB               	movwf	___lmul@product+2
   634  06B9  3000               	movlw	0
   635  06BA  00FA               	movwf	___lmul@product+1
   636  06BB  3000               	movlw	0
   637  06BC  00F9               	movwf	___lmul@product
   638  06BD                     l733:
   639  06BD  1C70               	btfss	___lmul@multiplier,0
   640  06BE  2EC0               	goto	u181
   641  06BF  2EC1               	goto	u180
   642  06C0                     u181:
   643  06C0  2ED8               	goto	l737
   644  06C1                     u180:
   645  06C1                     l735:
   646  06C1  0874               	movf	___lmul@multiplicand,w
   647  06C2  07F9               	addwf	___lmul@product,f
   648  06C3  0875               	movf	___lmul@multiplicand+1,w
   649  06C4  1103               	clrz
   650  06C5  1803               	skipnc
   651  06C6  3E01               	addlw	1
   652  06C7  1903               	skipnz
   653  06C8  2ECA               	goto	u191
   654  06C9  07FA               	addwf	___lmul@product+1,f
   655  06CA                     u191:
   656  06CA  0876               	movf	___lmul@multiplicand+2,w
   657  06CB  1103               	clrz
   658  06CC  1803               	skipnc
   659  06CD  3E01               	addlw	1
   660  06CE  1903               	skipnz
   661  06CF  2ED1               	goto	u192
   662  06D0  07FB               	addwf	___lmul@product+2,f
   663  06D1                     u192:
   664  06D1  0877               	movf	___lmul@multiplicand+3,w
   665  06D2  1103               	clrz
   666  06D3  1803               	skipnc
   667  06D4  3E01               	addlw	1
   668  06D5  1903               	skipnz
   669  06D6  2ED8               	goto	u193
   670  06D7  07FC               	addwf	___lmul@product+3,f
   671  06D8                     u193:
   672  06D8                     l737:
   673  06D8  3001               	movlw	1
   674  06D9  00F8               	movwf	??___lmul
   675  06DA                     u205:
   676  06DA  1003               	clrc
   677  06DB  0DF4               	rlf	___lmul@multiplicand,f
   678  06DC  0DF5               	rlf	___lmul@multiplicand+1,f
   679  06DD  0DF6               	rlf	___lmul@multiplicand+2,f
   680  06DE  0DF7               	rlf	___lmul@multiplicand+3,f
   681  06DF  0BF8               	decfsz	??___lmul,f
   682  06E0  2EDA               	goto	u205
   683  06E1                     l739:
   684  06E1  3001               	movlw	1
   685  06E2                     u215:
   686  06E2  1003               	clrc
   687  06E3  0CF3               	rrf	___lmul@multiplier+3,f
   688  06E4  0CF2               	rrf	___lmul@multiplier+2,f
   689  06E5  0CF1               	rrf	___lmul@multiplier+1,f
   690  06E6  0CF0               	rrf	___lmul@multiplier,f
   691  06E7  3EFF               	addlw	-1
   692  06E8  1D03               	skipz
   693  06E9  2EE2               	goto	u215
   694  06EA  0873               	movf	___lmul@multiplier+3,w
   695  06EB  0472               	iorwf	___lmul@multiplier+2,w
   696  06EC  0471               	iorwf	___lmul@multiplier+1,w
   697  06ED  0470               	iorwf	___lmul@multiplier,w
   698  06EE  1D03               	skipz
   699  06EF  2EF1               	goto	u221
   700  06F0  2EF2               	goto	u220
   701  06F1                     u221:
   702  06F1  2EBD               	goto	l733
   703  06F2                     u220:
   704  06F2                     l741:
   705  06F2  087C               	movf	___lmul@product+3,w
   706  06F3  00F3               	movwf	?___lmul+3
   707  06F4  087B               	movf	___lmul@product+2,w
   708  06F5  00F2               	movwf	?___lmul+2
   709  06F6  087A               	movf	___lmul@product+1,w
   710  06F7  00F1               	movwf	?___lmul+1
   711  06F8  0879               	movf	___lmul@product,w
   712  06F9  00F0               	movwf	?___lmul
   713  06FA                     l155:
   714  06FA  0008               	return
   715  06FB                     __end_of___lmul:
   716                           
   717                           	psect	text4
   718  0794                     __ptext4:	
   719 ;; *************** function ___lldiv *****************
   720 ;; Defined at:
   721 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  divisor         4    0[BANK0 ] unsigned long 
   724 ;;  dividend        4    4[BANK0 ] unsigned long 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  quotient        4    8[BANK0 ] unsigned long 
   727 ;;  counter         1   12[BANK0 ] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  4    0[BANK0 ] unsigned long 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       8       0       0       0
   738 ;;      Locals:         0       5       0       0       0
   739 ;;      Temps:          1       0       0       0       0
   740 ;;      Totals:         1      13       0       0       0
   741 ;;Total ram usage:       14 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_I2C_Initialize
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750  0794                     ___lldiv:	
   751                           ;psect for function ___lldiv
   752                           
   753  0794                     l745:	
   754                           ;incstack = 0
   755                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   756                           
   757  0794  3000               	movlw	0
   758  0795  1283               	bcf	3,5	;RP0=0, select bank0
   759  0796  1303               	bcf	3,6	;RP1=0, select bank0
   760  0797  00AB               	movwf	___lldiv@quotient+3
   761  0798  3000               	movlw	0
   762  0799  00AA               	movwf	___lldiv@quotient+2
   763  079A  3000               	movlw	0
   764  079B  00A9               	movwf	___lldiv@quotient+1
   765  079C  3000               	movlw	0
   766  079D  00A8               	movwf	___lldiv@quotient
   767  079E  0823               	movf	___lldiv@divisor+3,w
   768  079F  0422               	iorwf	___lldiv@divisor+2,w
   769  07A0  0421               	iorwf	___lldiv@divisor+1,w
   770  07A1  0420               	iorwf	___lldiv@divisor,w
   771  07A2  1903               	skipnz
   772  07A3  2FA5               	goto	u231
   773  07A4  2FA6               	goto	u230
   774  07A5                     u231:
   775  07A5  2FF3               	goto	l765
   776  07A6                     u230:
   777  07A6                     l747:
   778  07A6  01AC               	clrf	___lldiv@counter
   779  07A7  0AAC               	incf	___lldiv@counter,f
   780  07A8  2FB6               	goto	l751
   781  07A9                     l749:
   782  07A9  3001               	movlw	1
   783  07AA  00FD               	movwf	??___lldiv
   784  07AB                     u245:
   785  07AB  1003               	clrc
   786  07AC  0DA0               	rlf	___lldiv@divisor,f
   787  07AD  0DA1               	rlf	___lldiv@divisor+1,f
   788  07AE  0DA2               	rlf	___lldiv@divisor+2,f
   789  07AF  0DA3               	rlf	___lldiv@divisor+3,f
   790  07B0  0BFD               	decfsz	??___lldiv,f
   791  07B1  2FAB               	goto	u245
   792  07B2  3001               	movlw	1
   793  07B3  00FD               	movwf	??___lldiv
   794  07B4  087D               	movf	??___lldiv,w
   795  07B5  07AC               	addwf	___lldiv@counter,f
   796  07B6                     l751:
   797  07B6  1FA3               	btfss	___lldiv@divisor+3,7
   798  07B7  2FB9               	goto	u251
   799  07B8  2FBA               	goto	u250
   800  07B9                     u251:
   801  07B9  2FA9               	goto	l749
   802  07BA                     u250:
   803  07BA                     l753:
   804  07BA  3001               	movlw	1
   805  07BB  00FD               	movwf	??___lldiv
   806  07BC                     u265:
   807  07BC  1003               	clrc
   808  07BD  0DA8               	rlf	___lldiv@quotient,f
   809  07BE  0DA9               	rlf	___lldiv@quotient+1,f
   810  07BF  0DAA               	rlf	___lldiv@quotient+2,f
   811  07C0  0DAB               	rlf	___lldiv@quotient+3,f
   812  07C1  0BFD               	decfsz	??___lldiv,f
   813  07C2  2FBC               	goto	u265
   814  07C3                     l755:
   815  07C3  0823               	movf	___lldiv@divisor+3,w
   816  07C4  0227               	subwf	___lldiv@dividend+3,w
   817  07C5  1D03               	skipz
   818  07C6  2FD1               	goto	u275
   819  07C7  0822               	movf	___lldiv@divisor+2,w
   820  07C8  0226               	subwf	___lldiv@dividend+2,w
   821  07C9  1D03               	skipz
   822  07CA  2FD1               	goto	u275
   823  07CB  0821               	movf	___lldiv@divisor+1,w
   824  07CC  0225               	subwf	___lldiv@dividend+1,w
   825  07CD  1D03               	skipz
   826  07CE  2FD1               	goto	u275
   827  07CF  0820               	movf	___lldiv@divisor,w
   828  07D0  0224               	subwf	___lldiv@dividend,w
   829  07D1                     u275:
   830  07D1  1C03               	skipc
   831  07D2  2FD4               	goto	u271
   832  07D3  2FD5               	goto	u270
   833  07D4                     u271:
   834  07D4  2FE4               	goto	l761
   835  07D5                     u270:
   836  07D5                     l757:
   837  07D5  0820               	movf	___lldiv@divisor,w
   838  07D6  02A4               	subwf	___lldiv@dividend,f
   839  07D7  0821               	movf	___lldiv@divisor+1,w
   840  07D8  1C03               	skipc
   841  07D9  0F21               	incfsz	___lldiv@divisor+1,w
   842  07DA  02A5               	subwf	___lldiv@dividend+1,f
   843  07DB  0822               	movf	___lldiv@divisor+2,w
   844  07DC  1C03               	skipc
   845  07DD  0F22               	incfsz	___lldiv@divisor+2,w
   846  07DE  02A6               	subwf	___lldiv@dividend+2,f
   847  07DF  0823               	movf	___lldiv@divisor+3,w
   848  07E0  1C03               	skipc
   849  07E1  0F23               	incfsz	___lldiv@divisor+3,w
   850  07E2  02A7               	subwf	___lldiv@dividend+3,f
   851  07E3                     l759:
   852  07E3  1428               	bsf	___lldiv@quotient,0
   853  07E4                     l761:
   854  07E4  3001               	movlw	1
   855  07E5                     u285:
   856  07E5  1003               	clrc
   857  07E6  0CA3               	rrf	___lldiv@divisor+3,f
   858  07E7  0CA2               	rrf	___lldiv@divisor+2,f
   859  07E8  0CA1               	rrf	___lldiv@divisor+1,f
   860  07E9  0CA0               	rrf	___lldiv@divisor,f
   861  07EA  3EFF               	addlw	-1
   862  07EB  1D03               	skipz
   863  07EC  2FE5               	goto	u285
   864  07ED                     l763:
   865  07ED  3001               	movlw	1
   866  07EE  02AC               	subwf	___lldiv@counter,f
   867  07EF  1D03               	btfss	3,2
   868  07F0  2FF2               	goto	u291
   869  07F1  2FF3               	goto	u290
   870  07F2                     u291:
   871  07F2  2FBA               	goto	l753
   872  07F3                     u290:
   873  07F3                     l765:
   874  07F3  082B               	movf	___lldiv@quotient+3,w
   875  07F4  00A3               	movwf	?___lldiv+3
   876  07F5  082A               	movf	___lldiv@quotient+2,w
   877  07F6  00A2               	movwf	?___lldiv+2
   878  07F7  0829               	movf	___lldiv@quotient+1,w
   879  07F8  00A1               	movwf	?___lldiv+1
   880  07F9  0828               	movf	___lldiv@quotient,w
   881  07FA  00A0               	movwf	?___lldiv
   882  07FB                     l177:
   883  07FB  0008               	return
   884  07FC                     __end_of___lldiv:
   885                           
   886                           	psect	text5
   887  0695                     __ptext5:	
   888 ;; *************** function _I2C_End *****************
   889 ;; Defined at:
   890 ;;		line 30 in file "./i2c.h"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 1
   911 ;; This function calls:
   912 ;;		_I2C_Hold
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918  0695                     _I2C_End:	
   919                           ;psect for function _I2C_End
   920                           
   921  0695                     l705:	
   922                           ;incstack = 0
   923                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
   924                           
   925                           
   926                           ;./i2c.h: 32:   I2C_Hold();
   927  0695  120A  118A  26A8  120A  118A  	fcall	_I2C_Hold
   928  069A                     l707:
   929                           
   930                           ;./i2c.h: 33:   PEN = 1;
   931  069A  1683               	bsf	3,5	;RP0=1, select bank1
   932  069B  1303               	bcf	3,6	;RP1=0, select bank1
   933  069C  1511               	bsf	17,2	;volatile
   934  069D                     l41:
   935  069D  0008               	return
   936  069E                     __end_of_I2C_End:
   937                           
   938                           	psect	text6
   939  068C                     __ptext6:	
   940 ;; *************** function _I2C_Begin *****************
   941 ;; Defined at:
   942 ;;		line 25 in file "./i2c.h"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 1
   963 ;; This function calls:
   964 ;;		_I2C_Hold
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970  068C                     _I2C_Begin:	
   971                           ;psect for function _I2C_Begin
   972                           
   973  068C                     l701:	
   974                           ;incstack = 0
   975                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
   976                           
   977                           
   978                           ;./i2c.h: 27:   I2C_Hold();
   979  068C  120A  118A  26A8  120A  118A  	fcall	_I2C_Hold
   980  0691                     l703:
   981                           
   982                           ;./i2c.h: 28:   SEN = 1;
   983  0691  1683               	bsf	3,5	;RP0=1, select bank1
   984  0692  1303               	bcf	3,6	;RP1=0, select bank1
   985  0693  1411               	bsf	17,0	;volatile
   986  0694                     l38:
   987  0694  0008               	return
   988  0695                     __end_of_I2C_Begin:
   989                           
   990                           	psect	text7
   991  06A8                     __ptext7:	
   992 ;; *************** function _I2C_Hold *****************
   993 ;; Defined at:
   994 ;;		line 20 in file "./i2c.h"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_I2C_Begin
  1018 ;;		_I2C_End
  1019 ;;		_I2C_Write
  1020 ;;		_I2C_Read
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024  06A8                     _I2C_Hold:	
  1025                           ;psect for function _I2C_Hold
  1026                           
  1027  06A8                     l647:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _I2C_Hold: [wreg+status,2]
  1030                           
  1031  06A8                     l649:	
  1032                           ;./i2c.h: 22:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) ) ;
  1033                           
  1034  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1035  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1036  06AA  0811               	movf	17,w	;volatile
  1037  06AB  391F               	andlw	31
  1038  06AC  1D03               	btfss	3,2
  1039  06AD  2EAF               	goto	u11
  1040  06AE  2EB0               	goto	u10
  1041  06AF                     u11:
  1042  06AF  2EA8               	goto	l649
  1043  06B0                     u10:
  1044  06B0                     l651:
  1045  06B0  1914               	btfsc	20,2	;volatile
  1046  06B1  2EB3               	goto	u21
  1047  06B2  2EB4               	goto	u20
  1048  06B3                     u21:
  1049  06B3  2EA8               	goto	l649
  1050  06B4                     u20:
  1051  06B4                     l35:
  1052  06B4  0008               	return
  1053  06B5                     __end_of_I2C_Hold:
  1054  007E                     btemp	set	126	;btemp
  1055  007E                     wtemp0	set	126
  1056                           
  1057                           	psect	idloc
  1058                           
  1059                           ;Config register IDLOC0 @ 0x2000
  1060                           ;	unspecified, using default values
  1061  2000                     	org	8192
  1062  2000  3FFF               	dw	16383
  1063                           
  1064                           ;Config register IDLOC1 @ 0x2001
  1065                           ;	unspecified, using default values
  1066  2001                     	org	8193
  1067  2001  3FFF               	dw	16383
  1068                           
  1069                           ;Config register IDLOC2 @ 0x2002
  1070                           ;	unspecified, using default values
  1071  2002                     	org	8194
  1072  2002  3FFF               	dw	16383
  1073                           
  1074                           ;Config register IDLOC3 @ 0x2003
  1075                           ;	unspecified, using default values
  1076  2003                     	org	8195
  1077  2003  3FFF               	dw	16383
  1078                           
  1079                           	psect	config
  1080                           
  1081                           ;Config register CONFIG @ 0x2007
  1082                           ;	Oscillator Selection bits
  1083                           ;	FOSC = HS, HS oscillator
  1084                           ;	Watchdog Timer Enable bit
  1085                           ;	WDTE = OFF, WDT disabled
  1086                           ;	Power-up Timer Enable bit
  1087                           ;	PWRTE = ON, PWRT enabled
  1088                           ;	Brown-out Reset Enable bit
  1089                           ;	BOREN = ON, BOR enabled
  1090                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1091                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1092                           ;	Data EEPROM Memory Code Protection bit
  1093                           ;	CPD = OFF, Data EEPROM code protection off
  1094                           ;	Flash Program Memory Write Enable bits
  1095                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1096                           ;	In-Circuit Debugger Mode bit
  1097                           ;	DEBUG = 0x1, unprogrammed default
  1098                           ;	Flash Program Memory Code Protection bit
  1099                           ;	CP = OFF, Code protection off
  1100  2007                     	org	8199
  1101  2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _I2C_Initialize->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     906
                                             21 BANK0      3     3      0
                          _I2C_Begin
                            _I2C_End
                     _I2C_Initialize
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            2     0      2     250
                                              0 COMMON     2     0      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (1) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Begin
     _I2C_Hold
   _I2C_End
     _I2C_Hold
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _I2C_Write
     _I2C_Hold

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 28 23:35:56 2022

                     l41 069D                       l35 06B4                       l44 06A7  
                     l52 070A                       l29 0793                       l38 0694  
                     u10 06B0                       u11 06AF                       u20 06B4  
                     u21 06B3                      l155 06FA                      l177 07FB  
                    l701 068C                      l703 0691                      l705 0695  
                    l651 06B0                      l707 069A                      l731 06B5  
                    l741 06F2                      l733 06BD                      l647 06A8  
                    l751 07B6                      l735 06C1                      l649 06A8  
                    l761 07E4                      l753 07BA                      l745 0794  
                    l737 06D8                      l763 07ED                      l755 07C3  
                    l747 07A6                      l739 06E1                      l771 0745  
                    l757 07D5                      l749 07A9                      l765 07F3  
                    l773 0749                      l781 06A3                      l759 07E3  
                    l775 074C                      l783 06FB                      l777 0792  
                    l769 0741                      l785 072F                      l779 069E  
                    u220 06F2                      u300 075C                      u221 06F1  
                    u205 06DA                      u230 07A6                      u231 07A5  
                    u215 06E2                      u305 0757                      u250 07BA  
                    u251 07B9                      u180 06C1                      u245 07AB  
                    u181 06C0                      u317 0737                      u270 07D5  
                    u271 07D4                      u191 06CA                      u192 06D1  
                    _PEN 048A                      u265 07BC                      u193 06D8  
                    u290 07F3                      u291 07F2                      u275 07D1  
                    u285 07E5                      _SEN 0488          __end_of_I2C_End 069E  
                   _RCEN 048B                     _main 06FB         __end_of_I2C_Hold 06B5  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D          __end_of___lldiv 07FC  
    ___lmul@multiplicand 0074        __end_of_I2C_Begin 0695        __end_of_I2C_Write 06A8  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0741                ??_I2C_End 0070                   ??_main 0035  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                   ___lmul 06B5  
              ??___lldiv 007D                ?_I2C_Hold 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_I2C_Hold 0070               __pmaintext 06FB  
                ?___lmul 0070                  _I2C_End 0695           ___lmul@product 0079  
                _SSPCON2 0091                  _SSPSTAT 0094                _I2C_Begin 068C  
              _I2C_Write 069E                  ___lldiv 0794           _I2C_Initialize 0741  
                __ptext1 069E                  __ptext2 0741                  __ptext3 06B5  
                __ptext4 0794                  __ptext5 0695                  __ptext6 068C  
                __ptext7 06A8     end_of_initialization 07FC               ?_I2C_Begin 0070  
             ?_I2C_Write 0070          ___lldiv@divisor 0020          ___lldiv@counter 002C  
 __end_of_I2C_Initialize 0794          ?_I2C_Initialize 002D           __end_of___lmul 06FB  
    start_initialization 07FC              ??_I2C_Begin 0070              ??_I2C_Write 0072  
               ??___lmul 0078                 ?_I2C_End 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?___lldiv 0020                 _I2C_Hold 06A8  
      ___lmul@multiplier 0070         ??_I2C_Initialize 0031            I2C_Write@data 0070  
    I2C_Initialize@feq_K 002D         ___lldiv@dividend 0024         ___lldiv@quotient 0028  
